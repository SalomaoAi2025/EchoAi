<!DOCTYPE html>
<html lang="pt-BR">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Laudo de Ecodopplercardiograma</title>

    <!-- Bootstrap CSS -->
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
    
    <!-- Font Awesome -->
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css" rel="stylesheet">
    
    <!-- jsPDF -->
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jspdf/2.4.0/jspdf.umd.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jspdf-autotable/3.5.25/jspdf.plugin.autotable.min.js"></script>

    <!-- Firebase -->
    <script src="https://www.gstatic.com/firebasejs/9.0.0/firebase-app-compat.js"></script>
    <script src="https://www.gstatic.com/firebasejs/9.0.0/firebase-firestore-compat.js"></script>

    <style>
        @media print {
            body {
                margin: 0;
                padding: 5mm;
                font-size: 11pt;
                line-height: 1.3;
            }
            .container {
                width: 100%;
                max-width: 210mm;
                margin: auto;
                padding: 5mm;
            }
            .d-print-none {
                display: none !important;
            }
            table {
                width: 100%;
                border-collapse: collapse;
                font-size: 10pt;
                margin-bottom: 2mm;
            }
            th, td {
                border: 1px solid black;
                padding: 2px 4px;
                word-wrap: break-word;
            }
            #editor {
                word-wrap: break-word;
                max-width: 100%;
                overflow-wrap: break-word;
                white-space: pre-wrap;
                display: block !important;
                visibility: visible !important;
                font-size: 10pt;
                line-height: 1;
            }
            #editor p {
                margin: 0;
            }
            @page {
                size: A4;
                margin: 15mm;
            }
        }

        .container {
            max-width: 100%;
            margin: auto;
            padding: 5mm;
        }
    </style>
</head>
<body>
    <div class="container my-4">
        <!-- Identificação do Paciente -->
        <div class="card mb-4">
            <div class="card-header">Identificação do Paciente</div>
            <div class="card-body">
                <div class="row g-3">
                    <div class="col-md-6">
                        <label for="nome" class="form-label">Nome</label>
                        <input type="text" id="nome" class="form-control">
                    </div>
                    <div class="col-md-3">
                        <label for="dataNascimento" class="form-label">Data de Nascimento</label>
                        <input type="text" id="dataNascimento" class="form-control" placeholder="dd/mm/aaaa" oninput="formatarData(this)">
                    </div>
                    <div class="col-md-3">
                        <label for="sexo" class="form-label">Sexo</label>
                        <select id="sexo" class="form-select">
                            <option value="Masculino">Masculino</option>
                            <option value="Feminino">Feminino</option>
                        </select>
                    </div>
                    <div class="col-md-3">
                        <label for="peso" class="form-label">Peso (kg)</label>
                        <input type="number" id="peso" class="form-control" oninput="calcularResultados()">
                    </div>
                    <div class="col-md-3">
                        <label for="altura" class="form-label">Altura (cm)</label>
                        <input type="number" id="altura" class="form-control" oninput="calcularResultados()">
                    </div>
                </div>
            </div>
        </div>
<!-- Medidas e Cálculos -->
        <div class="card mb-4">
            <div class="card-header">Medidas e Cálculos</div>
            <div class="card-body">
                <table class="table table-bordered">
                    <thead>
                        <tr>
                            <th>Medida</th>
                            <th>Valor</th>
                            <th>Cálculo</th>
                            <th>Resultado</th>
                        </tr>
                    </thead>
                    <tbody>
                        <tr>
                            <td>Átrio Esquerdo</td>
                            <td><input type="number" id="atrio" class="form-control" oninput="calcularResultados()"></td>
                            <td>Volume Diastólico Final</td>
                            <td id="print_volume_diast_final"></td>
                        </tr>
                        <tr>
                            <td>Aorta</td>
                            <td><input type="number" id="aorta" class="form-control" oninput="calcularResultados()"></td>
                            <td>Volume Sistólico</td>
                            <td id="print_volume_sistolico"></td>
                        </tr>
                        <tr>
                            <td>Diâmetro Diastólico</td>
                            <td><input type="number" id="diam_diast_final" class="form-control" oninput="calcularResultados()"></td>
                            <td>Volume Ejetado</td>
                            <td id="print_volume_ejetado"></td>
                        </tr>
                        <tr>
                            <td>Diâmetro Sistólico</td>
                            <td><input type="number" id="diam_sist_final" class="form-control" oninput="calcularResultados()"></td>
                            <td>Fração de Ejeção</td>
                            <td id="print_fracao_ejecao"></td>
                        </tr>
                        <tr>
                            <td>Espessura do Septo</td>
                            <td><input type="number" id="esp_diast_septo" class="form-control" oninput="calcularResultados()"></td>
                            <td>Percentual Enc. Cavidade</td>
                            <td id="print_percent_encurt"></td>
                        </tr>
                        <tr>
                            <td>Espessura da Parede (PPVE)</td>
                            <td><input type="number" id="esp_diast_ppve" class="form-control" oninput="calcularResultados()"></td>
                            <td>Espessura Relativa da Parede</td>
                            <td id="print_esp_relativa"></td>
                        </tr>
                    </tbody>
                </table>
            </div>
        </div>

        <!-- Editor de Laudo -->
        <div class="card mb-4">
            <div class="card-body">
                <div contenteditable="true" id="editor" class="border p-3">
                    <p>Exame realizado com ritmo cardíaco regular. Evidenciando:</p>
                    <p>Cavidades cardíacas com dimensões normais.<br>Raiz da aorta com diâmetro preservado.<br>Espessura miocárdica do ventrículo esquerdo conservada.</p>
                    <p>Desempenho sistólico do ventrículo esquerdo conservado. Não foram observadas alterações segmentares da contratilidade ventricular.</p>
                    <p>Função diastólica do ventrículo esquerdo conservada ao doppler mitral espectral.</p>
                    <p>Ventrículo direito com desempenho sistólico preservado - análise subjetiva.</p>
                    <p>Valva mitral com abertura e mobilidade conservadas. Colordoppler registrou refluxo discreto.</p>
                    <p>Valva tricúspide com abertura conservada. Colordoppler registrou refluxo discreto.</p>
                    <p>Valva aórtica com espessamento em seus folhetos. Abertura e mobilidade conservadas.</p>
                    <p>Valva pulmonar com abertura e mobilidade conservadas.</p>
                    <p>Demais fluxos transvalvares com velocidades normais ao colordoppler.</p>
                    <p>Pericárdio ecograficamente normal.</p>
                    <p><strong>OPINIÃO:</strong> Ecocardiograma dentro dos limites da normalidade.</p>
<p><em>Obs: A correta interpretação do resultado do exame depende de outros dados do paciente que só o médico solicitante possui.</em></p>
<div style="text-align: center; margin-top: 30px; padding-top: 20px;" class="assinatura">
    <hr style="width: 200px; margin: auto;">
    <p>Dr. Salomão Barauna Alcolumbre<br>
    CRM: 1098</p>
</div>

                </div>
            </div>
        </div>

        <!-- Botões -->
        <div class="d-flex gap-3">
            <button onclick="gerarPDF()" class="btn btn-secondary">Gerar PDF</button>
            <button onclick="limparDados()" class="btn btn-danger">Limpar Dados</button>
            <button onclick="salvarExameFirebase()" class="btn btn-success">
                <i class="fas fa-save"></i> Salvar no Banco de Dados
            </button>
        </div>
    </div>
<!-- Bootstrap Bundle with Popper -->
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>

    <!-- Script Principal -->
    <script>
        // Configuração do Firebase
        const firebaseConfig = {
            apiKey: "AIzaSyDK0lsUaY4EhITvKD4xTN0-eeFzKATJf8U",
            authDomain: "editor-de-laudos.firebaseapp.com",
            projectId: "editor-de-laudos",
            storageBucket: "editor-de-laudos.firebasestorage.app",
            messagingSenderId: "498928608673",
            appId: "1:498928608673:web:bebe44a087af79a14817e0",
            measurementId: "G-0ZYJC6ZW04"
        };

        // Inicializar Firebase
        firebase.initializeApp(firebaseConfig);
        const db = firebase.firestore();

        function formatarData(input) {
            let valor = input.value.replace(/\D/g, "");
            if (valor.length > 2) valor = valor.replace(/^(\d{2})(\d)/, "$1/$2");
            if (valor.length > 5) valor = valor.replace(/^(\d{2}\/\d{2})(\d)/, "$1/$2");
            input.value = valor;
        }

        function calcularResultados() {
            const diamDiastFinal = parseFloat(document.getElementById('diam_diast_final').value) || 0;
            const diamSistFinal = parseFloat(document.getElementById('diam_sist_final').value) || 0;
            const espDiastSeptal = parseFloat(document.getElementById('esp_diast_septo').value) || 0;
            const espDiastPPVE = parseFloat(document.getElementById('esp_diast_ppve').value) || 0;

            if (diamDiastFinal > 0 && diamSistFinal > 0) {
                const volumeDiastFinal = 7 * Math.pow(diamDiastFinal / 10, 3) / (2.4 + diamDiastFinal / 10);
                const volumeSistolico = 7 * Math.pow(diamSistFinal / 10, 3) / (2.4 + diamSistFinal / 10);
                const volumeEjetado = volumeDiastFinal - volumeSistolico;
                const fracaoEjecao = (volumeEjetado / volumeDiastFinal) * 100;
                const percentualEncurt = ((diamDiastFinal - diamSistFinal) / diamDiastFinal) * 100;
                const espessuraRelativa = (2 * espDiastPPVE) / diamDiastFinal;

                atualizarValor('print_volume_diast_final', volumeDiastFinal.toFixed(0));
                atualizarValor('print_volume_sistolico', volumeSistolico.toFixed(0));
                atualizarValor('print_volume_ejetado', volumeEjetado.toFixed(0));
                atualizarValor('print_fracao_ejecao', fracaoEjecao.toFixed(0));
                atualizarValor('print_percent_encurt', percentualEncurt.toFixed(0));
                atualizarValor('print_esp_relativa', espessuraRelativa.toFixed(2));
            }
        }

        function atualizarValor(id, valor) {
            const elemento = document.getElementById(id);
            if (elemento) {
                elemento.textContent = valor !== 'NaN' ? valor : '';
            }
        }

        function salvarDados() {
            const dados = {
                nome: document.getElementById('nome').value,
                dataNascimento: document.getElementById('dataNascimento').value,
                sexo: document.getElementById('sexo').value,
                peso: document.getElementById('peso').value,
                altura: document.getElementById('altura').value,
                
                atrio: document.getElementById('atrio').value,
                aorta: document.getElementById('aorta').value,
                diam_diast_final: document.getElementById('diam_diast_final').value,
                diam_sist_final: document.getElementById('diam_sist_final').value,
                esp_diast_septo: document.getElementById('esp_diast_septo').value,
                esp_diast_ppve: document.getElementById('esp_diast_ppve').value,
                
                laudoContent: document.getElementById('editor').innerHTML
            };
            
            localStorage.setItem('laudoEcoData', JSON.stringify(dados));
        }

        function carregarDados() {
            const dadosSalvos = localStorage.getItem('laudoEcoData');
            if (dadosSalvos) {
                const dados = JSON.parse(dadosSalvos);
                
                document.getElementById('nome').value = dados.nome || '';
                document.getElementById('dataNascimento').value = dados.dataNascimento || '';
                document.getElementById('sexo').value = dados.sexo || 'Masculino';
                document.getElementById('peso').value = dados.peso || '';
                document.getElementById('altura').value = dados.altura || '';
                
                document.getElementById('atrio').value = dados.atrio || '';
                document.getElementById('aorta').value = dados.aorta || '';
                document.getElementById('diam_diast_final').value = dados.diam_diast_final || '';
                document.getElementById('diam_sist_final').value = dados.diam_sist_final || '';
                document.getElementById('esp_diast_septo').value = dados.esp_diast_septo || '';
                document.getElementById('esp_diast_ppve').value = dados.esp_diast_ppve || '';
                
                document.getElementById('editor').innerHTML = dados.laudoContent || '';
                
                calcularResultados();
            }
        }

        function limparDados() {
            if (confirm('Tem certeza que deseja limpar todos os dados?')) {
                localStorage.removeItem('laudoEcoData');
                location.reload();
            }
        }

    function gerarPDF() {
    try {
        const { jsPDF } = window.jspdf;
        const doc = new jsPDF();

        // Configuração do título
        doc.setFontSize(16);
        const title = "Laudo de Ecodopplercardiograma";
        const pageWidth = doc.internal.pageSize.getWidth();
        const titleWidth = doc.getStringUnitWidth(title) * 16 / doc.internal.scaleFactor;
        const titleX = (pageWidth - titleWidth) / 2;
        doc.text(title, titleX, 20);

        // Dados do Paciente
        const dadosPaciente = [
            ["Nome", document.getElementById('nome').value || 'N/D'],
            ["Data Nascimento", document.getElementById('dataNascimento').value || 'N/D'],
            ["Sexo", document.getElementById('sexo').value || 'N/D'],
            ["Peso", document.getElementById('peso').value + " kg" || 'N/D'],
            ["Altura", document.getElementById('altura').value + " cm" || 'N/D']
        ];

        doc.autoTable({
            startY: 30,
            head: [['Dados do Paciente', '']],
            body: dadosPaciente,
            theme: 'grid',
            margin: { top: 30 }
        });

        // Medidas e Cálculos
        const medidasCalculos = [
            ["Átrio Esquerdo", document.getElementById('atrio').value || 'N/D', "Volume Diastólico Final", document.getElementById('print_volume_diast_final').textContent || 'N/D'],
            ["Aorta", document.getElementById('aorta').value || 'N/D', "Volume Sistólico", document.getElementById('print_volume_sistolico').textContent || 'N/D'],
            ["Diâmetro Diastólico", document.getElementById('diam_diast_final').value || 'N/D', "Volume Ejetado", document.getElementById('print_volume_ejetado').textContent || 'N/D'],
            ["Diâmetro Sistólico", document.getElementById('diam_sist_final').value || 'N/D', "Fração de Ejeção", document.getElementById('print_fracao_ejecao').textContent || 'N/D'],
            ["Espessura do Septo", document.getElementById('esp_diast_septo').value || 'N/D', "Percentual Enc. Cavidade", document.getElementById('print_percent_encurt').textContent || 'N/D'],
            ["Espessura da Parede (PPVE)", document.getElementById('esp_diast_ppve').value || 'N/D', "Espessura Relativa", document.getElementById('print_esp_relativa').textContent || 'N/D']
        ];

        doc.autoTable({
            startY: doc.autoTable.previous.finalY + 0.5,
            head: [['Medida', 'Valor', 'Cálculo', 'Resultado']],
            body: medidasCalculos,
            theme: 'grid',
            margin: { top: 2 }
        });

        // Conteúdo do Laudo
        const laudoContent = document.getElementById('editor').innerText;
        doc.autoTable({
            startY: doc.autoTable.previous.finalY + 0.5,
            head: [['']],
            body: [[laudoContent]],
            theme: 'plain',
            styles: {
                font: 'helvetica',
                fontSize: 10,
                cellPadding: 1,
                overflow: 'linebreak',
                cellWidth: 'wrap'
            },
            margin: { top: 0.5 }
        });

        // Assinatura
        doc.setFont("helvetica");
        doc.setFontSize(10);
        
        const larguraLinha = 100;
        const posicaoXLinha = (pageWidth - larguraLinha) / 2;
        const posicaoYLinha = doc.autoTable.previous.finalY + 20;
        
        doc.line(posicaoXLinha, posicaoYLinha, posicaoXLinha + larguraLinha, posicaoYLinha);
        
        doc.text("Dr. Salomão Barauna Alcolumbre", 
                pageWidth / 2, 
                posicaoYLinha + 8,
                { align: "center" });
                
        doc.text("CRM: 1098", 
                pageWidth / 2, 
                posicaoYLinha + 16,
                { align: "center" });

        // Pega o nome do paciente e trata para usar no nome do arquivo
        const nomePaciente = document.getElementById('nome').value || 'sem_nome';
        const nomeArquivo = nomePaciente
            .normalize('NFD')
            .replace(/[\u0300-\u036f]/g, '')
            .replace(/[^a-zA-Z0-9]/g, '_')
            .toLowerCase();

        // Adiciona a data atual ao nome do arquivo
        const dataAtual = new Date().toISOString().split('T')[0];
        
        // Salva o PDF com o nome do paciente e data
        doc.save(`laudo_${nomeArquivo}_${dataAtual}.pdf`);

    } catch (error) {
        console.error("Erro ao gerar PDF:", error);
        alert("Ocorreu um erro ao gerar o PDF. Por favor, tente novamente.");
    }
}
        // Função para salvar no Firebase
       async function salvarExameFirebase() {
    try {
        // Verifica se os campos obrigatórios estão preenchidos
        const nome = document.getElementById('nome').value;
        const dataNascimento = document.getElementById('dataNascimento').value;
        
        if (!nome || !dataNascimento) {
            alert('Por favor, preencha o nome e a data de nascimento do paciente.');
            return;
        }

        // Prepara os dados completos para salvar
        const dadosExame = {
            // Dados do paciente
            nomeCompleto: nome,
            dataNascimento: dataNascimento,
            sexo: document.getElementById('sexo').value,
            peso: document.getElementById('peso').value,
            altura: document.getElementById('altura').value,
            
            // Medidas
            atrio: document.getElementById('atrio').value,
            aorta: document.getElementById('aorta').value,
            diamDiastFinal: document.getElementById('diam_diast_final').value,
            diamSistFinal: document.getElementById('diam_sist_final').value,
            espDiastSepto: document.getElementById('esp_diast_septo').value,
            espDiastPpve: document.getElementById('esp_diast_ppve').value,
            
            // Cálculos
            volumeDiastFinal: document.getElementById('print_volume_diast_final').textContent,
            volumeSistolico: document.getElementById('print_volume_sistolico').textContent,
            volumeEjetado: document.getElementById('print_volume_ejetado').textContent,
            fracaoEjecao: document.getElementById('print_fracao_ejecao').textContent,
            percentEncurt: document.getElementById('print_percent_encurt').textContent,
            espRelativa: document.getElementById('print_esp_relativa').textContent,
            
            // Laudo
            laudoContent: document.getElementById('editor').innerHTML,
            
            // Metadados
            dataExame: new Date().toISOString().split('T')[0],
            dataCriacao: firebase.firestore.FieldValue.serverTimestamp()
        };

        // Remove campos vazios
        const dadosFiltrados = Object.fromEntries(
            Object.entries(dadosExame).filter(([_, value]) => 
                value !== null && value !== '' && value !== undefined
            )
        );

        // Salva no Firebase com retry
        let tentativas = 0;
        const maxTentativas = 3;
        
        while (tentativas < maxTentativas) {
            try {
                const docRef = await db.collection('exames').add(dadosFiltrados);
                console.log('ID do documento:', docRef.id);
                alert('Exame salvo com sucesso!');
                return;
            } catch (err) {
                tentativas++;
                if (tentativas === maxTentativas) throw err;
                await new Promise(resolve => setTimeout(resolve, 1000 * tentativas));
            }
        }
    } catch (error) {
        console.error('Erro ao salvar:', error);
        let mensagemErro = 'Erro ao salvar o exame. ';
        
        if (error.code === 'permission-denied') {
            mensagemErro += 'Sem permissão para salvar. Verifique suas credenciais.';
        } else if (error.code === 'unavailable') {
            mensagemErro += 'Serviço indisponível. Verifique sua conexão.';
        } else {
            mensagemErro += 'Por favor, tente novamente.';
        }
        
        alert(mensagemErro);
    }
}

// Carrega os dados quando a página iniciar
document.addEventListener('DOMContentLoaded', function() {
    carregarDados();
    
    const campos = [
        'nome', 'dataNascimento', 'sexo', 'peso', 'altura',
        'atrio', 'aorta', 'diam_diast_final', 'diam_sist_final',
        'esp_diast_septo', 'esp_diast_ppve'
    ];
    
    campos.forEach(campo => {
        document.getElementById(campo).addEventListener('input', salvarDados);
    });
    
    document.getElementById('editor').addEventListener('input', salvarDados);
});
    </script>
</body>
</html>


